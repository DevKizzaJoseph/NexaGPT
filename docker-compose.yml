services:
  # PostgreSQL database with pgvector extension for NexaGPT
  db:
    image: pgvector/pgvector:pg17
    ports:
      - "2345:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=NexaGPT
      - POSTGRES_PASSWORD=Newpassword
    volumes: 
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  # Redis for job queues and caching
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  # Bull Dashboard for monitoring job queues
  bull-board:
    image: driesv/bull-dashboard
    ports: 
      - "4000:4000"
    environment:
      - REDIS_HOST=redis
    depends_on:
      - redis
  
  # NexaGPT Backend (NestJS)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "45671:45671"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:Newpassword@db:5432/NexaGPT?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=0987654323456
      - JWT_EXPIRES_IN=7d
      - OPENAI_API_KEY=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
      - OPENAI_MODEL_CHAT=gpt-4o
      - OPENAI_MODEL_TITLE=gpt-4o-mini
      - OPENAI_VECTOR_STORE_ID=vs_68b57046ad2c8191b7557aea76c6447e
      - GOOGLE_CLIENT_ID=884451892099-9fgv4i31alar492n09gflteocmbslp28.apps.googleusercontent.com
      - GOOGLE_CLIENT_SECRET=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
      - GOOGLE_REDIRECT_URI=http://localhost:45671/api/auth/google/callback
      - DEV_FRONTEND_URL=http://localhost:45670
      - MAX_FILE_SIZE=10485760
      - UPLOAD_PATH=./uploads
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/uploads:/app/uploads

  
  # NexaGPT Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "45670:45670"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:45671/api
      - NEXT_PUBLIC_WS_URL=ws://localhost:45671
    depends_on:
      - backend


volumes:
  postgres-data:
  redis-data: